openapi: 3.0.3
info:
  title: kafka-self-service API
  version: 1.0.0-SNAPSHOT
servers:
- description: Auto generated value
  url: http://localhost:9080
- description: Auto generated value
  url: http://0.0.0.0:9080
paths:
  /apis/authorization/v1/namespaces/{namespace}/localresourceaccessreviews:
    post:
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceAccessReview'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAccessReviewResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Authorization Resource
  /apis/authorization/v1/resourceaccessreviews:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceAccessReview'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAccessReviewResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Authorization Resource
  /apis/authorization/v1/selfsubjectaccessreviews:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectAccessReview'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectAccessReviewResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Authorization Resource
  /apis/authorization/v1/subjectaccessreviews:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectAccessReview'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectAccessReviewResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Authorization Resource
  /apis/kafka.rbac/v1/namespaces/{namespace}/bindings:
    delete:
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RbacRoleBindingRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RbacRoleBindingResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Kafka Rbac Resource
    post:
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RbacRoleBindingRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RbacRoleBindingResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Kafka Rbac Resource
  /apis/kafka.rbac/v1/namespaces/{namespace}/resources:
    get:
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: role
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericListKafkaRbacSummary'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Kafka Rbac Resource
  /apis/kafka.topic/v1/namespaces/{namespace}/topics:
    get:
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericListKafkaTopic'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Topics Resource
    post:
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTopicRequestData'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KafkaTopic'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Invalid
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Topics Resource
  /apis/kafka.topic/v1/namespaces/{namespace}/topics/{name}:
    delete:
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Topics Resource
    get:
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KafkaTopic'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Topics Resource
  /apis/kafka.topic/v1/namespaces/{namespace}/topics/{name}/describe:
    get:
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KafkaTopic'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Topics Resource
  /apis/project/v1/projects:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericListProject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Projects Resource
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Already exists
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Invalid
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Projects Resource
  /apis/project/v1/projects/{name}:
    get:
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Projects Resource
  /apis/rbac.authorization/v1/clusterrolebindings:
    delete:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleBinding'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Rbac Auth Resource
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericListRoleBinding'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Rbac Auth Resource
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleBinding'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleBinding'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Invalid
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Rbac Auth Resource
  /apis/rbac.authorization/v1/clusterroles:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericListRole'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Rbac Auth Resource
  /apis/rbac.authorization/v1/clusterroles/{name}:
    get:
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Rbac Auth Resource
  /apis/rbac.authorization/v1/namespaces/{namespace}/rolebindings:
    delete:
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleBinding'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Rbac Auth Resource
    get:
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericListRoleBinding'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Rbac Auth Resource
    post:
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleBinding'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleBinding'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Invalid
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Rbac Auth Resource
  /apis/resources:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericListApiResource'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Apis Resource
  /apis/user/v1/groups:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericListGroup'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - User Groups Resource
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Already exists
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Invalid
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - User Groups Resource
  /apis/user/v1/groups/{name}:
    get:
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - User Groups Resource
    put:
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Invalid
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - User Groups Resource
  /apis/user/v1/users/{name}:
    get:
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - User Groups Resource
  /apis/user/v1/users/~:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - User Groups Resource
components:
  schemas:
    ApiResource:
      example:
        kind: kind
        name: name
        verbs:
        - verbs
        - verbs
        namespaced: true
      properties:
        name:
          type: string
        kind:
          type: string
        namespaced:
          type: boolean
        verbs:
          items:
            type: string
          type: array
      type: object
    ApiStatus:
      example:
        reason: reason
        detailedMessage: detailedMessage
        code: 0
        kind: kind
        message: message
        status: status
      properties:
        kind:
          type: string
        status:
          type: string
        message:
          type: string
        reason:
          type: string
        code:
          format: int32
          type: integer
        detailedMessage:
          type: string
      type: object
    ConfigItem:
      example:
        default: true
        is_sensitive: true
        name: name
        is_read_only: true
        readOnly: true
        source: source
        sensitive: true
        is_default: true
        value: value
      properties:
        name:
          type: string
        value:
          type: string
        is_default:
          type: boolean
        is_read_only:
          type: boolean
        is_sensitive:
          type: boolean
        source:
          type: string
        default:
          type: boolean
        readOnly:
          type: boolean
        sensitive:
          type: boolean
      type: object
    CreateTopicRequestData:
      example:
        configs:
        - name: name
          value: value
        - name: name
          value: value
        replication_factor: 6
        topic_name: topic_name
        replicas_assignments:
        - partition_id: 1
          broker_ids:
          - 5
          - 5
        - partition_id: 1
          broker_ids:
          - 5
          - 5
        partitions_count: 0
      properties:
        topic_name:
          type: string
        partitions_count:
          format: int32
          type: integer
        replication_factor:
          format: int32
          type: integer
        replicas_assignments:
          items:
            $ref: '#/components/schemas/CreateTopicRequestDataReplicasAssignmentsInner'
          type: array
        configs:
          items:
            $ref: '#/components/schemas/CreateTopicRequestDataConfigsInner'
          type: array
      type: object
    CreateTopicRequestDataConfigsInner:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    CreateTopicRequestDataReplicasAssignmentsInner:
      example:
        partition_id: 1
        broker_ids:
        - 5
        - 5
      properties:
        partition_id:
          format: int32
          type: integer
        broker_ids:
          items:
            format: int32
            type: integer
          type: array
      type: object
    GenericListApiResource:
      example:
        kind: kind
        name: name
        namespace: namespace
        items:
        - kind: kind
          name: name
          verbs:
          - verbs
          - verbs
          namespaced: true
        - kind: kind
          name: name
          verbs:
          - verbs
          - verbs
          namespaced: true
      properties:
        kind:
          type: string
        items:
          items:
            $ref: '#/components/schemas/ApiResource'
          type: array
        name:
          type: string
        namespace:
          type: string
      type: object
    GenericListGroup:
      example:
        kind: kind
        name: name
        namespace: namespace
        items:
        - kind: kind
          name: name
          namespace: namespace
          users:
          - users
          - users
        - kind: kind
          name: name
          namespace: namespace
          users:
          - users
          - users
      properties:
        kind:
          type: string
        items:
          items:
            $ref: '#/components/schemas/Group'
          type: array
        name:
          type: string
        namespace:
          type: string
      type: object
    GenericListKafkaRbacSummary:
      example:
        kind: kind
        name: name
        namespace: namespace
        items:
        - principal: principal
          role: role
          resourceName: resourceName
          patternType: patternType
          resourceType: resourceType
        - principal: principal
          role: role
          resourceName: resourceName
          patternType: patternType
          resourceType: resourceType
      properties:
        kind:
          type: string
        items:
          items:
            $ref: '#/components/schemas/KafkaRbacSummary'
          type: array
        name:
          type: string
        namespace:
          type: string
      type: object
    GenericListKafkaTopic:
      example:
        kind: kind
        name: name
        namespace: namespace
        items:
        - partitions:
          - leader: 5
            partition: 1
            replicas:
            - 5
            - 5
            topic: topic
            isr:
            - 2
            - 2
          - leader: 5
            partition: 1
            replicas:
            - 5
            - 5
            topic: topic
            isr:
            - 2
            - 2
          partition_count: 0
          replication_factor: 6
          kind: kind
          name: name
          namespace: namespace
          config:
            key:
              default: true
              is_sensitive: true
              name: name
              is_read_only: true
              readOnly: true
              source: source
              sensitive: true
              is_default: true
              value: value
        - partitions:
          - leader: 5
            partition: 1
            replicas:
            - 5
            - 5
            topic: topic
            isr:
            - 2
            - 2
          - leader: 5
            partition: 1
            replicas:
            - 5
            - 5
            topic: topic
            isr:
            - 2
            - 2
          partition_count: 0
          replication_factor: 6
          kind: kind
          name: name
          namespace: namespace
          config:
            key:
              default: true
              is_sensitive: true
              name: name
              is_read_only: true
              readOnly: true
              source: source
              sensitive: true
              is_default: true
              value: value
      properties:
        kind:
          type: string
        items:
          items:
            $ref: '#/components/schemas/KafkaTopic'
          type: array
        name:
          type: string
        namespace:
          type: string
      type: object
    GenericListProject:
      example:
        kind: kind
        name: name
        namespace: namespace
        items:
        - kind: kind
          displayName: displayName
          name: name
          namespace: namespace
          description: description
        - kind: kind
          displayName: displayName
          name: name
          namespace: namespace
          description: description
      properties:
        kind:
          type: string
        items:
          items:
            $ref: '#/components/schemas/Project'
          type: array
        name:
          type: string
        namespace:
          type: string
      type: object
    GenericListRole:
      example:
        kind: kind
        name: name
        namespace: namespace
        items:
        - kind: kind
          name: name
          namespace: namespace
          rules:
          - resourceNames:
            - resourceNames
            - resourceNames
            resources:
            - resources
            - resources
            verbs:
            - verbs
            - verbs
          - resourceNames:
            - resourceNames
            - resourceNames
            resources:
            - resources
            - resources
            verbs:
            - verbs
            - verbs
        - kind: kind
          name: name
          namespace: namespace
          rules:
          - resourceNames:
            - resourceNames
            - resourceNames
            resources:
            - resources
            - resources
            verbs:
            - verbs
            - verbs
          - resourceNames:
            - resourceNames
            - resourceNames
            resources:
            - resources
            - resources
            verbs:
            - verbs
            - verbs
      properties:
        kind:
          type: string
        items:
          items:
            $ref: '#/components/schemas/Role'
          type: array
        name:
          type: string
        namespace:
          type: string
      type: object
    GenericListRoleBinding:
      example:
        kind: kind
        name: name
        namespace: namespace
        items:
        - role: role
          kind: kind
          subjects:
          - kind: kind
            name: name
            namespace: namespace
          - kind: kind
            name: name
            namespace: namespace
          name: name
          namespace: namespace
        - role: role
          kind: kind
          subjects:
          - kind: kind
            name: name
            namespace: namespace
          - kind: kind
            name: name
            namespace: namespace
          name: name
          namespace: namespace
      properties:
        kind:
          type: string
        items:
          items:
            $ref: '#/components/schemas/RoleBinding'
          type: array
        name:
          type: string
        namespace:
          type: string
      type: object
    Group:
      example:
        kind: kind
        name: name
        namespace: namespace
        users:
        - users
        - users
      properties:
        kind:
          type: string
        users:
          items:
            type: string
          type: array
        name:
          pattern: \S
          type: string
        namespace:
          type: string
      required:
      - name
      type: object
    KafkaRbacSummary:
      example:
        principal: principal
        role: role
        resourceName: resourceName
        patternType: patternType
        resourceType: resourceType
      properties:
        principal:
          type: string
        role:
          type: string
        resourceType:
          type: string
        resourceName:
          type: string
        patternType:
          type: string
      type: object
    KafkaTopic:
      example:
        partitions:
        - leader: 5
          partition: 1
          replicas:
          - 5
          - 5
          topic: topic
          isr:
          - 2
          - 2
        - leader: 5
          partition: 1
          replicas:
          - 5
          - 5
          topic: topic
          isr:
          - 2
          - 2
        partition_count: 0
        replication_factor: 6
        kind: kind
        name: name
        namespace: namespace
        config:
          key:
            default: true
            is_sensitive: true
            name: name
            is_read_only: true
            readOnly: true
            source: source
            sensitive: true
            is_default: true
            value: value
      properties:
        kind:
          type: string
        name:
          pattern: \S
          type: string
        namespace:
          type: string
        partition_count:
          format: int32
          type: integer
        replication_factor:
          format: int32
          type: integer
        config:
          additionalProperties:
            $ref: '#/components/schemas/ConfigItem'
          type: object
        partitions:
          items:
            $ref: '#/components/schemas/PartitionInfo'
          type: array
      required:
      - name
      type: object
    PartitionInfo:
      example:
        leader: 5
        partition: 1
        replicas:
        - 5
        - 5
        topic: topic
        isr:
        - 2
        - 2
      properties:
        topic:
          type: string
        partition:
          format: int32
          type: integer
        leader:
          format: int32
          type: integer
        replicas:
          items:
            format: int32
            type: integer
          type: array
        isr:
          items:
            format: int32
            type: integer
          type: array
      type: object
    Project:
      example:
        kind: kind
        displayName: displayName
        name: name
        namespace: namespace
        description: description
      properties:
        kind:
          type: string
        name:
          pattern: \S
          type: string
        description:
          type: string
        displayName:
          type: string
        namespace:
          type: string
      required:
      - name
      type: object
    RbacRoleBindingRequest:
      example:
        role: role
        resource: resource
        user: user
      properties:
        role:
          type: string
        user:
          type: string
        resource:
          type: string
      type: object
    RbacRoleBindingResponse:
      example:
        principal: principal
        role: role
        kind: kind
        name: name
        namespace: namespace
        resourceName: resourceName
        patternType: patternType
        resourceType: resourceType
      properties:
        kind:
          type: string
        name:
          type: string
        namespace:
          type: string
        principal:
          type: string
        resourceName:
          type: string
        resourceType:
          type: string
        patternType:
          type: string
        role:
          type: string
      type: object
    ResourceAccessReview:
      example:
        resource: resource
        namespace: namespace
        verb: verb
        resourceName: resourceName
      properties:
        namespace:
          type: string
        verb:
          type: string
        resource:
          type: string
        resourceName:
          type: string
      type: object
    ResourceAccessReviewResponse:
      example:
        kind: kind
        namespace: namespace
        name: name
        groups:
        - groups
        - groups
        users:
        - users
        - users
      properties:
        kind:
          type: string
        users:
          items:
            type: string
          type: array
        groups:
          items:
            type: string
          type: array
        namespace:
          type: string
        name:
          type: string
      type: object
    Role:
      example:
        kind: kind
        name: name
        namespace: namespace
        rules:
        - resourceNames:
          - resourceNames
          - resourceNames
          resources:
          - resources
          - resources
          verbs:
          - verbs
          - verbs
        - resourceNames:
          - resourceNames
          - resourceNames
          resources:
          - resources
          - resources
          verbs:
          - verbs
          - verbs
      properties:
        kind:
          type: string
        name:
          pattern: \S
          type: string
        namespace:
          type: string
        rules:
          items:
            $ref: '#/components/schemas/Rule'
          type: array
      required:
      - name
      type: object
    RoleBinding:
      example:
        role: role
        kind: kind
        subjects:
        - kind: kind
          name: name
          namespace: namespace
        - kind: kind
          name: name
          namespace: namespace
        name: name
        namespace: namespace
      properties:
        kind:
          type: string
        subjects:
          items:
            $ref: '#/components/schemas/Subject'
          type: array
          uniqueItems: true
        name:
          pattern: \S
          type: string
        namespace:
          type: string
        role:
          type: string
      required:
      - name
      type: object
    Rule:
      example:
        resourceNames:
        - resourceNames
        - resourceNames
        resources:
        - resources
        - resources
        verbs:
        - verbs
        - verbs
      properties:
        verbs:
          items:
            type: string
          type: array
          uniqueItems: true
        resources:
          items:
            type: string
          type: array
          uniqueItems: true
        resourceNames:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    Subject:
      example:
        kind: kind
        name: name
        namespace: namespace
      properties:
        kind:
          type: string
        name:
          type: string
        namespace:
          type: string
      type: object
    SubjectAccessReview:
      example:
        resource: resource
        namespace: namespace
        verb: verb
        resourceName: resourceName
        user: user
      properties:
        namespace:
          type: string
        verb:
          type: string
        resource:
          type: string
        resourceName:
          type: string
        user:
          type: string
      type: object
    SubjectAccessReviewResponse:
      example:
        kind: kind
        allowed: true
        namespace: namespace
        name: name
      properties:
        kind:
          type: string
        namespace:
          type: string
        allowed:
          type: boolean
        name:
          type: string
      type: object
    User:
      example:
        kind: kind
        name: name
        namespace: namespace
        groups:
        - groups
        - groups
        fullName: fullName
        email: email
      properties:
        kind:
          type: string
        groups:
          items:
            type: string
          type: array
        name:
          type: string
        fullName:
          type: string
        email:
          type: string
        namespace:
          type: string
      type: object
  securitySchemes:
    SecurityScheme:
      description: Authentication
      flows:
        implicit:
          authorizationUrl: http://localhost:8080/realms/demo/protocol/openid-connect/auth
          refreshUrl: http://localhost:8080/realms/demo/protocol/openid-connect/token
          scopes: {}
          tokenUrl: http://localhost:8080/realms/demo/protocol/openid-connect/token/introspect
      type: oauth2
