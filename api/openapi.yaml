openapi: 3.0.3
info:
  title: kafka-self-service API
  version: 1.0.0-SNAPSHOT
servers:
- description: Auto generated value
  url: http://localhost:9080
- description: Auto generated value
  url: http://0.0.0.0:9080
paths:
  /apis/authorization/v1/namespaces/{namespace}/localresourceaccessreviews:
    post:
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceAccessReview'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAccessReviewResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Authorization Resource
  /apis/authorization/v1/resourceaccessreviews:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceAccessReview'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAccessReviewResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Authorization Resource
  /apis/authorization/v1/subjectaccessreviews:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectAccessReview'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectAccessReviewResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Authorization Resource
  /apis/kafka.rbac/v1/namespaces/{namespace}/bindings:
    post:
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RbacRoleBindingRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RbacRoleBindingResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Kafka Rbac Resource
  /apis/kafka.topic/v1/namespaces/{namespace}/topics:
    get:
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericListKafkaTopic'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Topics Resource
    post:
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTopicRequestData'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KafkaTopic'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Topics Resource
  /apis/project/v1/projects:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericListProject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Projects Resource
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Already exists
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Projects Resource
  /apis/project/v1/projects/{name}:
    get:
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Projects Resource
  /apis/rbac.authorization/v1/clusterrolebindings:
    delete:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleBinding'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Rbac Auth Resource
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericListRoleBinding'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Rbac Auth Resource
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleBinding'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleBinding'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Invalid
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Rbac Auth Resource
  /apis/rbac.authorization/v1/clusterroles:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericListRole'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Rbac Auth Resource
  /apis/rbac.authorization/v1/clusterroles/{name}:
    get:
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Rbac Auth Resource
  /apis/rbac.authorization/v1/namespaces/{namespace}/rolebindings:
    delete:
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleBinding'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Rbac Auth Resource
    get:
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericListRoleBinding'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Rbac Auth Resource
    post:
      parameters:
      - explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleBinding'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleBinding'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - Rbac Auth Resource
  /apis/user/v1/groups:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericListGroup'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - User Groups Resource
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Already exists
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - User Groups Resource
  /apis/user/v1/groups/{name}:
    get:
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - User Groups Resource
    put:
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - User Groups Resource
  /apis/user/v1/users/{name}:
    get:
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatus'
          description: Service unavailable
      security:
      - SecurityScheme: []
      tags:
      - User Groups Resource
components:
  schemas:
    ApiStatus:
      example:
        reason: reason
        detailedMessage: detailedMessage
        code: 0
        kind: kind
        message: message
        status: status
      properties:
        kind:
          type: string
        status:
          type: string
        message:
          type: string
        reason:
          type: string
        code:
          format: int32
          type: integer
        detailedMessage:
          type: string
      type: object
    CreateTopicRequestData:
      example:
        configs:
        - name: name
          value: value
        - name: name
          value: value
        replication_factor: 6
        topic_name: topic_name
        replicas_assignments:
        - partition_id: 1
          broker_ids:
          - 5
          - 5
        - partition_id: 1
          broker_ids:
          - 5
          - 5
        partitions_count: 0
      properties:
        topic_name:
          type: string
        partitions_count:
          format: int32
          type: integer
        replication_factor:
          format: int32
          type: integer
        replicas_assignments:
          items:
            $ref: '#/components/schemas/CreateTopicRequestDataReplicasAssignmentsInner'
          type: array
        configs:
          items:
            $ref: '#/components/schemas/CreateTopicRequestDataConfigsInner'
          type: array
      type: object
    CreateTopicRequestDataConfigsInner:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    CreateTopicRequestDataReplicasAssignmentsInner:
      example:
        partition_id: 1
        broker_ids:
        - 5
        - 5
      properties:
        partition_id:
          format: int32
          type: integer
        broker_ids:
          items:
            format: int32
            type: integer
          type: array
      type: object
    GenericListGroup:
      example:
        kind: kind
        name: name
        namespace: namespace
        items:
        - kind: kind
          name: name
          namespace: namespace
          users:
          - users
          - users
        - kind: kind
          name: name
          namespace: namespace
          users:
          - users
          - users
      properties:
        kind:
          type: string
        items:
          items:
            $ref: '#/components/schemas/Group'
          type: array
        name:
          type: string
        namespace:
          type: string
      type: object
    GenericListKafkaTopic:
      example:
        kind: kind
        name: name
        namespace: namespace
        items:
        - replication_factor: 6
          kind: kind
          name: name
          namespace: namespace
          partitions_count: 0
        - replication_factor: 6
          kind: kind
          name: name
          namespace: namespace
          partitions_count: 0
      properties:
        kind:
          type: string
        items:
          items:
            $ref: '#/components/schemas/KafkaTopic'
          type: array
        name:
          type: string
        namespace:
          type: string
      type: object
    GenericListProject:
      example:
        kind: kind
        name: name
        namespace: namespace
        items:
        - kind: kind
          name: name
          namespace: namespace
          description: description
        - kind: kind
          name: name
          namespace: namespace
          description: description
      properties:
        kind:
          type: string
        items:
          items:
            $ref: '#/components/schemas/Project'
          type: array
        name:
          type: string
        namespace:
          type: string
      type: object
    GenericListRole:
      example:
        kind: kind
        name: name
        namespace: namespace
        items:
        - kind: kind
          name: name
          namespace: namespace
          actions:
          - actions
          - actions
        - kind: kind
          name: name
          namespace: namespace
          actions:
          - actions
          - actions
      properties:
        kind:
          type: string
        items:
          items:
            $ref: '#/components/schemas/Role'
          type: array
        name:
          type: string
        namespace:
          type: string
      type: object
    GenericListRoleBinding:
      example:
        kind: kind
        name: name
        namespace: namespace
        items:
        - role: role
          kind: kind
          subjects:
          - kind: kind
            name: name
            namespace: namespace
          - kind: kind
            name: name
            namespace: namespace
          name: name
          namespace: namespace
        - role: role
          kind: kind
          subjects:
          - kind: kind
            name: name
            namespace: namespace
          - kind: kind
            name: name
            namespace: namespace
          name: name
          namespace: namespace
      properties:
        kind:
          type: string
        items:
          items:
            $ref: '#/components/schemas/RoleBinding'
          type: array
        name:
          type: string
        namespace:
          type: string
      type: object
    Group:
      example:
        kind: kind
        name: name
        namespace: namespace
        users:
        - users
        - users
      properties:
        kind:
          type: string
        users:
          items:
            type: string
          type: array
        name:
          type: string
        namespace:
          type: string
      type: object
    KafkaTopic:
      example:
        replication_factor: 6
        kind: kind
        name: name
        namespace: namespace
        partitions_count: 0
      properties:
        kind:
          type: string
        name:
          pattern: \S
          type: string
        namespace:
          type: string
        partitions_count:
          format: int32
          type: integer
        replication_factor:
          format: int32
          type: integer
      required:
      - name
      type: object
    Project:
      example:
        kind: kind
        name: name
        namespace: namespace
        description: description
      properties:
        kind:
          type: string
        name:
          type: string
        description:
          type: string
        namespace:
          type: string
      type: object
    RbacRoleBindingRequest:
      example:
        role: role
        resource: resource
        user: user
      properties:
        role:
          type: string
        user:
          type: string
        resource:
          type: string
      type: object
    RbacRoleBindingResponse:
      example:
        principal: principal
        role: role
        kind: kind
        name: name
        namespace: namespace
        resourceName: resourceName
        patternType: patternType
        resourceType: resourceType
      properties:
        kind:
          type: string
        name:
          type: string
        namespace:
          type: string
        principal:
          type: string
        resourceName:
          type: string
        resourceType:
          type: string
        patternType:
          type: string
        role:
          type: string
      type: object
    ResourceAccessReview:
      example:
        resource: resource
        action: action
        resourceName: resourceName
      properties:
        action:
          type: string
        resource:
          type: string
        resourceName:
          type: string
      type: object
    ResourceAccessReviewResponse:
      example:
        kind: kind
        namespace: namespace
        name: name
        groups:
        - groups
        - groups
        users:
        - users
        - users
      properties:
        kind:
          type: string
        users:
          items:
            type: string
          type: array
        groups:
          items:
            type: string
          type: array
        namespace:
          type: string
        name:
          type: string
      type: object
    Role:
      example:
        kind: kind
        name: name
        namespace: namespace
        actions:
        - actions
        - actions
      properties:
        kind:
          type: string
        actions:
          items:
            type: string
          type: array
        name:
          type: string
        namespace:
          type: string
      type: object
    RoleBinding:
      example:
        role: role
        kind: kind
        subjects:
        - kind: kind
          name: name
          namespace: namespace
        - kind: kind
          name: name
          namespace: namespace
        name: name
        namespace: namespace
      properties:
        kind:
          type: string
        subjects:
          items:
            $ref: '#/components/schemas/Subject'
          type: array
          uniqueItems: true
        name:
          pattern: \S
          type: string
        namespace:
          type: string
        role:
          type: string
      required:
      - name
      type: object
    Subject:
      example:
        kind: kind
        name: name
        namespace: namespace
      properties:
        kind:
          type: string
        name:
          type: string
        namespace:
          type: string
      type: object
    SubjectAccessReview:
      example:
        resource: resource
        namespace: namespace
        action: action
        user: user
      properties:
        namespace:
          type: string
        action:
          type: string
        resource:
          type: string
        user:
          type: string
      type: object
    SubjectAccessReviewResponse:
      example:
        kind: kind
        allowed: true
        namespace: namespace
        name: name
      properties:
        kind:
          type: string
        namespace:
          type: string
        allowed:
          type: boolean
        name:
          type: string
      type: object
    User:
      example:
        kind: kind
        name: name
        namespace: namespace
        groups:
        - groups
        - groups
        fullName: fullName
        email: email
      properties:
        kind:
          type: string
        groups:
          items:
            type: string
          type: array
        name:
          type: string
        fullName:
          type: string
        email:
          type: string
        namespace:
          type: string
      type: object
  securitySchemes:
    SecurityScheme:
      description: Authentication
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/c6198395-22e6-4778-9809-ac8dcfd76901/v2.0/protocol/openid-connect/auth
          refreshUrl: https://login.microsoftonline.com/c6198395-22e6-4778-9809-ac8dcfd76901/v2.0/protocol/openid-connect/token
          scopes: {}
          tokenUrl: https://login.microsoftonline.com/c6198395-22e6-4778-9809-ac8dcfd76901/v2.0/protocol/openid-connect/token/introspect
      type: oauth2
