/*
kafka-self-service API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0-SNAPSHOT
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SelfSubjectAccessReview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SelfSubjectAccessReview{}

// SelfSubjectAccessReview struct for SelfSubjectAccessReview
type SelfSubjectAccessReview struct {
	Kind *string `json:"kind,omitempty"`
	Name *string `json:"name,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	Verb *string `json:"verb,omitempty"`
	Resource *string `json:"resource,omitempty"`
	Group *string `json:"group,omitempty"`
	Version *string `json:"version,omitempty"`
	Status *SubjectAccessReviewStatus `json:"status,omitempty"`
}

// NewSelfSubjectAccessReview instantiates a new SelfSubjectAccessReview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSelfSubjectAccessReview() *SelfSubjectAccessReview {
	this := SelfSubjectAccessReview{}
	return &this
}

// NewSelfSubjectAccessReviewWithDefaults instantiates a new SelfSubjectAccessReview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSelfSubjectAccessReviewWithDefaults() *SelfSubjectAccessReview {
	this := SelfSubjectAccessReview{}
	return &this
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *SelfSubjectAccessReview) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelfSubjectAccessReview) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *SelfSubjectAccessReview) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *SelfSubjectAccessReview) SetKind(v string) {
	o.Kind = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SelfSubjectAccessReview) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelfSubjectAccessReview) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SelfSubjectAccessReview) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SelfSubjectAccessReview) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *SelfSubjectAccessReview) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelfSubjectAccessReview) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *SelfSubjectAccessReview) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *SelfSubjectAccessReview) SetNamespace(v string) {
	o.Namespace = &v
}

// GetVerb returns the Verb field value if set, zero value otherwise.
func (o *SelfSubjectAccessReview) GetVerb() string {
	if o == nil || IsNil(o.Verb) {
		var ret string
		return ret
	}
	return *o.Verb
}

// GetVerbOk returns a tuple with the Verb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelfSubjectAccessReview) GetVerbOk() (*string, bool) {
	if o == nil || IsNil(o.Verb) {
		return nil, false
	}
	return o.Verb, true
}

// HasVerb returns a boolean if a field has been set.
func (o *SelfSubjectAccessReview) HasVerb() bool {
	if o != nil && !IsNil(o.Verb) {
		return true
	}

	return false
}

// SetVerb gets a reference to the given string and assigns it to the Verb field.
func (o *SelfSubjectAccessReview) SetVerb(v string) {
	o.Verb = &v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *SelfSubjectAccessReview) GetResource() string {
	if o == nil || IsNil(o.Resource) {
		var ret string
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelfSubjectAccessReview) GetResourceOk() (*string, bool) {
	if o == nil || IsNil(o.Resource) {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *SelfSubjectAccessReview) HasResource() bool {
	if o != nil && !IsNil(o.Resource) {
		return true
	}

	return false
}

// SetResource gets a reference to the given string and assigns it to the Resource field.
func (o *SelfSubjectAccessReview) SetResource(v string) {
	o.Resource = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *SelfSubjectAccessReview) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelfSubjectAccessReview) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *SelfSubjectAccessReview) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *SelfSubjectAccessReview) SetGroup(v string) {
	o.Group = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *SelfSubjectAccessReview) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelfSubjectAccessReview) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *SelfSubjectAccessReview) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *SelfSubjectAccessReview) SetVersion(v string) {
	o.Version = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SelfSubjectAccessReview) GetStatus() SubjectAccessReviewStatus {
	if o == nil || IsNil(o.Status) {
		var ret SubjectAccessReviewStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelfSubjectAccessReview) GetStatusOk() (*SubjectAccessReviewStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SelfSubjectAccessReview) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given SubjectAccessReviewStatus and assigns it to the Status field.
func (o *SelfSubjectAccessReview) SetStatus(v SubjectAccessReviewStatus) {
	o.Status = &v
}

func (o SelfSubjectAccessReview) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SelfSubjectAccessReview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !IsNil(o.Verb) {
		toSerialize["verb"] = o.Verb
	}
	if !IsNil(o.Resource) {
		toSerialize["resource"] = o.Resource
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableSelfSubjectAccessReview struct {
	value *SelfSubjectAccessReview
	isSet bool
}

func (v NullableSelfSubjectAccessReview) Get() *SelfSubjectAccessReview {
	return v.value
}

func (v *NullableSelfSubjectAccessReview) Set(val *SelfSubjectAccessReview) {
	v.value = val
	v.isSet = true
}

func (v NullableSelfSubjectAccessReview) IsSet() bool {
	return v.isSet
}

func (v *NullableSelfSubjectAccessReview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSelfSubjectAccessReview(val *SelfSubjectAccessReview) *NullableSelfSubjectAccessReview {
	return &NullableSelfSubjectAccessReview{value: val, isSet: true}
}

func (v NullableSelfSubjectAccessReview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSelfSubjectAccessReview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


