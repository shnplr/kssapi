/*
kafka-self-service API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0-SNAPSHOT
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateTopicRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTopicRequest{}

// CreateTopicRequest struct for CreateTopicRequest
type CreateTopicRequest struct {
	Kind *string `json:"kind,omitempty"`
	ApiVersion *string `json:"apiVersion,omitempty"`
	Name *string `json:"name,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	PartitionCount *int32 `json:"partition_count,omitempty"`
	ReplicationFactor *int32 `json:"replication_factor,omitempty"`
	Configs []ConfigItem `json:"configs,omitempty"`
}

// NewCreateTopicRequest instantiates a new CreateTopicRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTopicRequest() *CreateTopicRequest {
	this := CreateTopicRequest{}
	return &this
}

// NewCreateTopicRequestWithDefaults instantiates a new CreateTopicRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTopicRequestWithDefaults() *CreateTopicRequest {
	this := CreateTopicRequest{}
	return &this
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *CreateTopicRequest) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTopicRequest) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *CreateTopicRequest) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *CreateTopicRequest) SetKind(v string) {
	o.Kind = &v
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *CreateTopicRequest) GetApiVersion() string {
	if o == nil || IsNil(o.ApiVersion) {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTopicRequest) GetApiVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ApiVersion) {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *CreateTopicRequest) HasApiVersion() bool {
	if o != nil && !IsNil(o.ApiVersion) {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *CreateTopicRequest) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateTopicRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTopicRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateTopicRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateTopicRequest) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *CreateTopicRequest) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTopicRequest) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *CreateTopicRequest) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *CreateTopicRequest) SetNamespace(v string) {
	o.Namespace = &v
}

// GetPartitionCount returns the PartitionCount field value if set, zero value otherwise.
func (o *CreateTopicRequest) GetPartitionCount() int32 {
	if o == nil || IsNil(o.PartitionCount) {
		var ret int32
		return ret
	}
	return *o.PartitionCount
}

// GetPartitionCountOk returns a tuple with the PartitionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTopicRequest) GetPartitionCountOk() (*int32, bool) {
	if o == nil || IsNil(o.PartitionCount) {
		return nil, false
	}
	return o.PartitionCount, true
}

// HasPartitionCount returns a boolean if a field has been set.
func (o *CreateTopicRequest) HasPartitionCount() bool {
	if o != nil && !IsNil(o.PartitionCount) {
		return true
	}

	return false
}

// SetPartitionCount gets a reference to the given int32 and assigns it to the PartitionCount field.
func (o *CreateTopicRequest) SetPartitionCount(v int32) {
	o.PartitionCount = &v
}

// GetReplicationFactor returns the ReplicationFactor field value if set, zero value otherwise.
func (o *CreateTopicRequest) GetReplicationFactor() int32 {
	if o == nil || IsNil(o.ReplicationFactor) {
		var ret int32
		return ret
	}
	return *o.ReplicationFactor
}

// GetReplicationFactorOk returns a tuple with the ReplicationFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTopicRequest) GetReplicationFactorOk() (*int32, bool) {
	if o == nil || IsNil(o.ReplicationFactor) {
		return nil, false
	}
	return o.ReplicationFactor, true
}

// HasReplicationFactor returns a boolean if a field has been set.
func (o *CreateTopicRequest) HasReplicationFactor() bool {
	if o != nil && !IsNil(o.ReplicationFactor) {
		return true
	}

	return false
}

// SetReplicationFactor gets a reference to the given int32 and assigns it to the ReplicationFactor field.
func (o *CreateTopicRequest) SetReplicationFactor(v int32) {
	o.ReplicationFactor = &v
}

// GetConfigs returns the Configs field value if set, zero value otherwise.
func (o *CreateTopicRequest) GetConfigs() []ConfigItem {
	if o == nil || IsNil(o.Configs) {
		var ret []ConfigItem
		return ret
	}
	return o.Configs
}

// GetConfigsOk returns a tuple with the Configs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTopicRequest) GetConfigsOk() ([]ConfigItem, bool) {
	if o == nil || IsNil(o.Configs) {
		return nil, false
	}
	return o.Configs, true
}

// HasConfigs returns a boolean if a field has been set.
func (o *CreateTopicRequest) HasConfigs() bool {
	if o != nil && !IsNil(o.Configs) {
		return true
	}

	return false
}

// SetConfigs gets a reference to the given []ConfigItem and assigns it to the Configs field.
func (o *CreateTopicRequest) SetConfigs(v []ConfigItem) {
	o.Configs = v
}

func (o CreateTopicRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTopicRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.ApiVersion) {
		toSerialize["apiVersion"] = o.ApiVersion
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !IsNil(o.PartitionCount) {
		toSerialize["partition_count"] = o.PartitionCount
	}
	if !IsNil(o.ReplicationFactor) {
		toSerialize["replication_factor"] = o.ReplicationFactor
	}
	if !IsNil(o.Configs) {
		toSerialize["configs"] = o.Configs
	}
	return toSerialize, nil
}

type NullableCreateTopicRequest struct {
	value *CreateTopicRequest
	isSet bool
}

func (v NullableCreateTopicRequest) Get() *CreateTopicRequest {
	return v.value
}

func (v *NullableCreateTopicRequest) Set(val *CreateTopicRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTopicRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTopicRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTopicRequest(val *CreateTopicRequest) *NullableCreateTopicRequest {
	return &NullableCreateTopicRequest{value: val, isSet: true}
}

func (v NullableCreateTopicRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTopicRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


