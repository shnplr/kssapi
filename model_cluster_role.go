/*
kafka-self-service API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0-SNAPSHOT
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClusterRole struct for ClusterRole
type ClusterRole struct {
	Name *string `json:"name,omitempty"`
	Actions []string `json:"actions,omitempty"`
}

// NewClusterRole instantiates a new ClusterRole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterRole() *ClusterRole {
	this := ClusterRole{}
	return &this
}

// NewClusterRoleWithDefaults instantiates a new ClusterRole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterRoleWithDefaults() *ClusterRole {
	this := ClusterRole{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClusterRole) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterRole) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClusterRole) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClusterRole) SetName(v string) {
	o.Name = &v
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *ClusterRole) GetActions() []string {
	if o == nil || isNil(o.Actions) {
		var ret []string
		return ret
	}
	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterRole) GetActionsOk() ([]string, bool) {
	if o == nil || isNil(o.Actions) {
    return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *ClusterRole) HasActions() bool {
	if o != nil && !isNil(o.Actions) {
		return true
	}

	return false
}

// SetActions gets a reference to the given []string and assigns it to the Actions field.
func (o *ClusterRole) SetActions(v []string) {
	o.Actions = v
}

func (o ClusterRole) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Actions) {
		toSerialize["actions"] = o.Actions
	}
	return json.Marshal(toSerialize)
}

type NullableClusterRole struct {
	value *ClusterRole
	isSet bool
}

func (v NullableClusterRole) Get() *ClusterRole {
	return v.value
}

func (v *NullableClusterRole) Set(val *ClusterRole) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterRole) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterRole(val *ClusterRole) *NullableClusterRole {
	return &NullableClusterRole{value: val, isSet: true}
}

func (v NullableClusterRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


