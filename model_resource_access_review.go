/*
kafka-self-service API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0-SNAPSHOT
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResourceAccessReview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceAccessReview{}

// ResourceAccessReview struct for ResourceAccessReview
type ResourceAccessReview struct {
	Kind *string `json:"kind,omitempty"`
	ApiVersion *string `json:"apiVersion,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	Verb string `json:"verb"`
	Resource string `json:"resource"`
	ResourceName *string `json:"resourceName,omitempty"`
	ResourceAPIGroup *string `json:"resourceAPIGroup,omitempty"`
	ResourceAPIVersion *string `json:"resourceAPIVersion,omitempty"`
}

// NewResourceAccessReview instantiates a new ResourceAccessReview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceAccessReview(verb string, resource string) *ResourceAccessReview {
	this := ResourceAccessReview{}
	this.Verb = verb
	this.Resource = resource
	return &this
}

// NewResourceAccessReviewWithDefaults instantiates a new ResourceAccessReview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceAccessReviewWithDefaults() *ResourceAccessReview {
	this := ResourceAccessReview{}
	return &this
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *ResourceAccessReview) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceAccessReview) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *ResourceAccessReview) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *ResourceAccessReview) SetKind(v string) {
	o.Kind = &v
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *ResourceAccessReview) GetApiVersion() string {
	if o == nil || IsNil(o.ApiVersion) {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceAccessReview) GetApiVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ApiVersion) {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *ResourceAccessReview) HasApiVersion() bool {
	if o != nil && !IsNil(o.ApiVersion) {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *ResourceAccessReview) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *ResourceAccessReview) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceAccessReview) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *ResourceAccessReview) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *ResourceAccessReview) SetNamespace(v string) {
	o.Namespace = &v
}

// GetVerb returns the Verb field value
func (o *ResourceAccessReview) GetVerb() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Verb
}

// GetVerbOk returns a tuple with the Verb field value
// and a boolean to check if the value has been set.
func (o *ResourceAccessReview) GetVerbOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Verb, true
}

// SetVerb sets field value
func (o *ResourceAccessReview) SetVerb(v string) {
	o.Verb = v
}

// GetResource returns the Resource field value
func (o *ResourceAccessReview) GetResource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Resource
}

// GetResourceOk returns a tuple with the Resource field value
// and a boolean to check if the value has been set.
func (o *ResourceAccessReview) GetResourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Resource, true
}

// SetResource sets field value
func (o *ResourceAccessReview) SetResource(v string) {
	o.Resource = v
}

// GetResourceName returns the ResourceName field value if set, zero value otherwise.
func (o *ResourceAccessReview) GetResourceName() string {
	if o == nil || IsNil(o.ResourceName) {
		var ret string
		return ret
	}
	return *o.ResourceName
}

// GetResourceNameOk returns a tuple with the ResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceAccessReview) GetResourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceName) {
		return nil, false
	}
	return o.ResourceName, true
}

// HasResourceName returns a boolean if a field has been set.
func (o *ResourceAccessReview) HasResourceName() bool {
	if o != nil && !IsNil(o.ResourceName) {
		return true
	}

	return false
}

// SetResourceName gets a reference to the given string and assigns it to the ResourceName field.
func (o *ResourceAccessReview) SetResourceName(v string) {
	o.ResourceName = &v
}

// GetResourceAPIGroup returns the ResourceAPIGroup field value if set, zero value otherwise.
func (o *ResourceAccessReview) GetResourceAPIGroup() string {
	if o == nil || IsNil(o.ResourceAPIGroup) {
		var ret string
		return ret
	}
	return *o.ResourceAPIGroup
}

// GetResourceAPIGroupOk returns a tuple with the ResourceAPIGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceAccessReview) GetResourceAPIGroupOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceAPIGroup) {
		return nil, false
	}
	return o.ResourceAPIGroup, true
}

// HasResourceAPIGroup returns a boolean if a field has been set.
func (o *ResourceAccessReview) HasResourceAPIGroup() bool {
	if o != nil && !IsNil(o.ResourceAPIGroup) {
		return true
	}

	return false
}

// SetResourceAPIGroup gets a reference to the given string and assigns it to the ResourceAPIGroup field.
func (o *ResourceAccessReview) SetResourceAPIGroup(v string) {
	o.ResourceAPIGroup = &v
}

// GetResourceAPIVersion returns the ResourceAPIVersion field value if set, zero value otherwise.
func (o *ResourceAccessReview) GetResourceAPIVersion() string {
	if o == nil || IsNil(o.ResourceAPIVersion) {
		var ret string
		return ret
	}
	return *o.ResourceAPIVersion
}

// GetResourceAPIVersionOk returns a tuple with the ResourceAPIVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceAccessReview) GetResourceAPIVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceAPIVersion) {
		return nil, false
	}
	return o.ResourceAPIVersion, true
}

// HasResourceAPIVersion returns a boolean if a field has been set.
func (o *ResourceAccessReview) HasResourceAPIVersion() bool {
	if o != nil && !IsNil(o.ResourceAPIVersion) {
		return true
	}

	return false
}

// SetResourceAPIVersion gets a reference to the given string and assigns it to the ResourceAPIVersion field.
func (o *ResourceAccessReview) SetResourceAPIVersion(v string) {
	o.ResourceAPIVersion = &v
}

func (o ResourceAccessReview) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceAccessReview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.ApiVersion) {
		toSerialize["apiVersion"] = o.ApiVersion
	}
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	toSerialize["verb"] = o.Verb
	toSerialize["resource"] = o.Resource
	if !IsNil(o.ResourceName) {
		toSerialize["resourceName"] = o.ResourceName
	}
	if !IsNil(o.ResourceAPIGroup) {
		toSerialize["resourceAPIGroup"] = o.ResourceAPIGroup
	}
	if !IsNil(o.ResourceAPIVersion) {
		toSerialize["resourceAPIVersion"] = o.ResourceAPIVersion
	}
	return toSerialize, nil
}

type NullableResourceAccessReview struct {
	value *ResourceAccessReview
	isSet bool
}

func (v NullableResourceAccessReview) Get() *ResourceAccessReview {
	return v.value
}

func (v *NullableResourceAccessReview) Set(val *ResourceAccessReview) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceAccessReview) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceAccessReview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceAccessReview(val *ResourceAccessReview) *NullableResourceAccessReview {
	return &NullableResourceAccessReview{value: val, isSet: true}
}

func (v NullableResourceAccessReview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceAccessReview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


