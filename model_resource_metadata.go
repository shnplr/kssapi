/*
kafka-self-service API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0-SNAPSHOT
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ResourceMetadata struct for ResourceMetadata
type ResourceMetadata struct {
	Self *string `json:"self,omitempty"`
	ResourceName *string `json:"resource_name,omitempty"`
}

// NewResourceMetadata instantiates a new ResourceMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceMetadata() *ResourceMetadata {
	this := ResourceMetadata{}
	return &this
}

// NewResourceMetadataWithDefaults instantiates a new ResourceMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceMetadataWithDefaults() *ResourceMetadata {
	this := ResourceMetadata{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *ResourceMetadata) GetSelf() string {
	if o == nil || isNil(o.Self) {
		var ret string
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceMetadata) GetSelfOk() (*string, bool) {
	if o == nil || isNil(o.Self) {
    return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *ResourceMetadata) HasSelf() bool {
	if o != nil && !isNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given string and assigns it to the Self field.
func (o *ResourceMetadata) SetSelf(v string) {
	o.Self = &v
}

// GetResourceName returns the ResourceName field value if set, zero value otherwise.
func (o *ResourceMetadata) GetResourceName() string {
	if o == nil || isNil(o.ResourceName) {
		var ret string
		return ret
	}
	return *o.ResourceName
}

// GetResourceNameOk returns a tuple with the ResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceMetadata) GetResourceNameOk() (*string, bool) {
	if o == nil || isNil(o.ResourceName) {
    return nil, false
	}
	return o.ResourceName, true
}

// HasResourceName returns a boolean if a field has been set.
func (o *ResourceMetadata) HasResourceName() bool {
	if o != nil && !isNil(o.ResourceName) {
		return true
	}

	return false
}

// SetResourceName gets a reference to the given string and assigns it to the ResourceName field.
func (o *ResourceMetadata) SetResourceName(v string) {
	o.ResourceName = &v
}

func (o ResourceMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !isNil(o.ResourceName) {
		toSerialize["resource_name"] = o.ResourceName
	}
	return json.Marshal(toSerialize)
}

type NullableResourceMetadata struct {
	value *ResourceMetadata
	isSet bool
}

func (v NullableResourceMetadata) Get() *ResourceMetadata {
	return v.value
}

func (v *NullableResourceMetadata) Set(val *ResourceMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceMetadata(val *ResourceMetadata) *NullableResourceMetadata {
	return &NullableResourceMetadata{value: val, isSet: true}
}

func (v NullableResourceMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


