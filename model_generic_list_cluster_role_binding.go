/*
kafka-self-service API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0-SNAPSHOT
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GenericListClusterRoleBinding type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenericListClusterRoleBinding{}

// GenericListClusterRoleBinding struct for GenericListClusterRoleBinding
type GenericListClusterRoleBinding struct {
	Kind *string `json:"kind,omitempty"`
	Items []ClusterRoleBinding `json:"items,omitempty"`
}

// NewGenericListClusterRoleBinding instantiates a new GenericListClusterRoleBinding object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenericListClusterRoleBinding() *GenericListClusterRoleBinding {
	this := GenericListClusterRoleBinding{}
	return &this
}

// NewGenericListClusterRoleBindingWithDefaults instantiates a new GenericListClusterRoleBinding object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenericListClusterRoleBindingWithDefaults() *GenericListClusterRoleBinding {
	this := GenericListClusterRoleBinding{}
	return &this
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *GenericListClusterRoleBinding) GetKind() string {
	if o == nil || isNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericListClusterRoleBinding) GetKindOk() (*string, bool) {
	if o == nil || isNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *GenericListClusterRoleBinding) HasKind() bool {
	if o != nil && !isNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *GenericListClusterRoleBinding) SetKind(v string) {
	o.Kind = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *GenericListClusterRoleBinding) GetItems() []ClusterRoleBinding {
	if o == nil || isNil(o.Items) {
		var ret []ClusterRoleBinding
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericListClusterRoleBinding) GetItemsOk() ([]ClusterRoleBinding, bool) {
	if o == nil || isNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *GenericListClusterRoleBinding) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []ClusterRoleBinding and assigns it to the Items field.
func (o *GenericListClusterRoleBinding) SetItems(v []ClusterRoleBinding) {
	o.Items = v
}

func (o GenericListClusterRoleBinding) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenericListClusterRoleBinding) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	return toSerialize, nil
}

type NullableGenericListClusterRoleBinding struct {
	value *GenericListClusterRoleBinding
	isSet bool
}

func (v NullableGenericListClusterRoleBinding) Get() *GenericListClusterRoleBinding {
	return v.value
}

func (v *NullableGenericListClusterRoleBinding) Set(val *GenericListClusterRoleBinding) {
	v.value = val
	v.isSet = true
}

func (v NullableGenericListClusterRoleBinding) IsSet() bool {
	return v.isSet
}

func (v *NullableGenericListClusterRoleBinding) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenericListClusterRoleBinding(val *GenericListClusterRoleBinding) *NullableGenericListClusterRoleBinding {
	return &NullableGenericListClusterRoleBinding{value: val, isSet: true}
}

func (v NullableGenericListClusterRoleBinding) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenericListClusterRoleBinding) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


