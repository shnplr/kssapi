/*
kafka-self-service API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0-SNAPSHOT
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TopicData struct for TopicData
type TopicData struct {
	Kind *string `json:"kind,omitempty"`
	Metadata *ResourceMetadata `json:"metadata,omitempty"`
	ClusterId *string `json:"cluster_id,omitempty"`
	TopicName *string `json:"topic_name,omitempty"`
	IsInternal *bool `json:"is_internal,omitempty"`
	ReplicationFactor *int32 `json:"replication_factor,omitempty"`
	PartitionsCount *int32 `json:"partitions_count,omitempty"`
	Partitions *Relationship `json:"partitions,omitempty"`
	Configs *Relationship `json:"configs,omitempty"`
	PartitionReassignments *Relationship `json:"partition_reassignments,omitempty"`
}

// NewTopicData instantiates a new TopicData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTopicData() *TopicData {
	this := TopicData{}
	return &this
}

// NewTopicDataWithDefaults instantiates a new TopicData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTopicDataWithDefaults() *TopicData {
	this := TopicData{}
	return &this
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *TopicData) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TopicData) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *TopicData) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *TopicData) SetKind(v string) {
	o.Kind = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *TopicData) GetMetadata() ResourceMetadata {
	if o == nil || o.Metadata == nil {
		var ret ResourceMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TopicData) GetMetadataOk() (*ResourceMetadata, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *TopicData) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ResourceMetadata and assigns it to the Metadata field.
func (o *TopicData) SetMetadata(v ResourceMetadata) {
	o.Metadata = &v
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *TopicData) GetClusterId() string {
	if o == nil || o.ClusterId == nil {
		var ret string
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TopicData) GetClusterIdOk() (*string, bool) {
	if o == nil || o.ClusterId == nil {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *TopicData) HasClusterId() bool {
	if o != nil && o.ClusterId != nil {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given string and assigns it to the ClusterId field.
func (o *TopicData) SetClusterId(v string) {
	o.ClusterId = &v
}

// GetTopicName returns the TopicName field value if set, zero value otherwise.
func (o *TopicData) GetTopicName() string {
	if o == nil || o.TopicName == nil {
		var ret string
		return ret
	}
	return *o.TopicName
}

// GetTopicNameOk returns a tuple with the TopicName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TopicData) GetTopicNameOk() (*string, bool) {
	if o == nil || o.TopicName == nil {
		return nil, false
	}
	return o.TopicName, true
}

// HasTopicName returns a boolean if a field has been set.
func (o *TopicData) HasTopicName() bool {
	if o != nil && o.TopicName != nil {
		return true
	}

	return false
}

// SetTopicName gets a reference to the given string and assigns it to the TopicName field.
func (o *TopicData) SetTopicName(v string) {
	o.TopicName = &v
}

// GetIsInternal returns the IsInternal field value if set, zero value otherwise.
func (o *TopicData) GetIsInternal() bool {
	if o == nil || o.IsInternal == nil {
		var ret bool
		return ret
	}
	return *o.IsInternal
}

// GetIsInternalOk returns a tuple with the IsInternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TopicData) GetIsInternalOk() (*bool, bool) {
	if o == nil || o.IsInternal == nil {
		return nil, false
	}
	return o.IsInternal, true
}

// HasIsInternal returns a boolean if a field has been set.
func (o *TopicData) HasIsInternal() bool {
	if o != nil && o.IsInternal != nil {
		return true
	}

	return false
}

// SetIsInternal gets a reference to the given bool and assigns it to the IsInternal field.
func (o *TopicData) SetIsInternal(v bool) {
	o.IsInternal = &v
}

// GetReplicationFactor returns the ReplicationFactor field value if set, zero value otherwise.
func (o *TopicData) GetReplicationFactor() int32 {
	if o == nil || o.ReplicationFactor == nil {
		var ret int32
		return ret
	}
	return *o.ReplicationFactor
}

// GetReplicationFactorOk returns a tuple with the ReplicationFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TopicData) GetReplicationFactorOk() (*int32, bool) {
	if o == nil || o.ReplicationFactor == nil {
		return nil, false
	}
	return o.ReplicationFactor, true
}

// HasReplicationFactor returns a boolean if a field has been set.
func (o *TopicData) HasReplicationFactor() bool {
	if o != nil && o.ReplicationFactor != nil {
		return true
	}

	return false
}

// SetReplicationFactor gets a reference to the given int32 and assigns it to the ReplicationFactor field.
func (o *TopicData) SetReplicationFactor(v int32) {
	o.ReplicationFactor = &v
}

// GetPartitionsCount returns the PartitionsCount field value if set, zero value otherwise.
func (o *TopicData) GetPartitionsCount() int32 {
	if o == nil || o.PartitionsCount == nil {
		var ret int32
		return ret
	}
	return *o.PartitionsCount
}

// GetPartitionsCountOk returns a tuple with the PartitionsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TopicData) GetPartitionsCountOk() (*int32, bool) {
	if o == nil || o.PartitionsCount == nil {
		return nil, false
	}
	return o.PartitionsCount, true
}

// HasPartitionsCount returns a boolean if a field has been set.
func (o *TopicData) HasPartitionsCount() bool {
	if o != nil && o.PartitionsCount != nil {
		return true
	}

	return false
}

// SetPartitionsCount gets a reference to the given int32 and assigns it to the PartitionsCount field.
func (o *TopicData) SetPartitionsCount(v int32) {
	o.PartitionsCount = &v
}

// GetPartitions returns the Partitions field value if set, zero value otherwise.
func (o *TopicData) GetPartitions() Relationship {
	if o == nil || o.Partitions == nil {
		var ret Relationship
		return ret
	}
	return *o.Partitions
}

// GetPartitionsOk returns a tuple with the Partitions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TopicData) GetPartitionsOk() (*Relationship, bool) {
	if o == nil || o.Partitions == nil {
		return nil, false
	}
	return o.Partitions, true
}

// HasPartitions returns a boolean if a field has been set.
func (o *TopicData) HasPartitions() bool {
	if o != nil && o.Partitions != nil {
		return true
	}

	return false
}

// SetPartitions gets a reference to the given Relationship and assigns it to the Partitions field.
func (o *TopicData) SetPartitions(v Relationship) {
	o.Partitions = &v
}

// GetConfigs returns the Configs field value if set, zero value otherwise.
func (o *TopicData) GetConfigs() Relationship {
	if o == nil || o.Configs == nil {
		var ret Relationship
		return ret
	}
	return *o.Configs
}

// GetConfigsOk returns a tuple with the Configs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TopicData) GetConfigsOk() (*Relationship, bool) {
	if o == nil || o.Configs == nil {
		return nil, false
	}
	return o.Configs, true
}

// HasConfigs returns a boolean if a field has been set.
func (o *TopicData) HasConfigs() bool {
	if o != nil && o.Configs != nil {
		return true
	}

	return false
}

// SetConfigs gets a reference to the given Relationship and assigns it to the Configs field.
func (o *TopicData) SetConfigs(v Relationship) {
	o.Configs = &v
}

// GetPartitionReassignments returns the PartitionReassignments field value if set, zero value otherwise.
func (o *TopicData) GetPartitionReassignments() Relationship {
	if o == nil || o.PartitionReassignments == nil {
		var ret Relationship
		return ret
	}
	return *o.PartitionReassignments
}

// GetPartitionReassignmentsOk returns a tuple with the PartitionReassignments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TopicData) GetPartitionReassignmentsOk() (*Relationship, bool) {
	if o == nil || o.PartitionReassignments == nil {
		return nil, false
	}
	return o.PartitionReassignments, true
}

// HasPartitionReassignments returns a boolean if a field has been set.
func (o *TopicData) HasPartitionReassignments() bool {
	if o != nil && o.PartitionReassignments != nil {
		return true
	}

	return false
}

// SetPartitionReassignments gets a reference to the given Relationship and assigns it to the PartitionReassignments field.
func (o *TopicData) SetPartitionReassignments(v Relationship) {
	o.PartitionReassignments = &v
}

func (o TopicData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.ClusterId != nil {
		toSerialize["cluster_id"] = o.ClusterId
	}
	if o.TopicName != nil {
		toSerialize["topic_name"] = o.TopicName
	}
	if o.IsInternal != nil {
		toSerialize["is_internal"] = o.IsInternal
	}
	if o.ReplicationFactor != nil {
		toSerialize["replication_factor"] = o.ReplicationFactor
	}
	if o.PartitionsCount != nil {
		toSerialize["partitions_count"] = o.PartitionsCount
	}
	if o.Partitions != nil {
		toSerialize["partitions"] = o.Partitions
	}
	if o.Configs != nil {
		toSerialize["configs"] = o.Configs
	}
	if o.PartitionReassignments != nil {
		toSerialize["partition_reassignments"] = o.PartitionReassignments
	}
	return json.Marshal(toSerialize)
}

type NullableTopicData struct {
	value *TopicData
	isSet bool
}

func (v NullableTopicData) Get() *TopicData {
	return v.value
}

func (v *NullableTopicData) Set(val *TopicData) {
	v.value = val
	v.isSet = true
}

func (v NullableTopicData) IsSet() bool {
	return v.isSet
}

func (v *NullableTopicData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTopicData(val *TopicData) *NullableTopicData {
	return &NullableTopicData{value: val, isSet: true}
}

func (v NullableTopicData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTopicData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


