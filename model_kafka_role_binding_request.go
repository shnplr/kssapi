/*
kafka-self-service API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0-SNAPSHOT
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the KafkaRoleBindingRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KafkaRoleBindingRequest{}

// KafkaRoleBindingRequest struct for KafkaRoleBindingRequest
type KafkaRoleBindingRequest struct {
	Kind *string `json:"kind,omitempty"`
	ApiVersion *string `json:"apiVersion,omitempty"`
	Name *string `json:"name,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	Role string `json:"role"`
	User string `json:"user"`
	CreateResourcePatterns []ResourcePattern `json:"createResourcePatterns,omitempty"`
	DeleteResourcePatterns []ResourcePattern `json:"deleteResourcePatterns,omitempty"`
}

// NewKafkaRoleBindingRequest instantiates a new KafkaRoleBindingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKafkaRoleBindingRequest(role string, user string) *KafkaRoleBindingRequest {
	this := KafkaRoleBindingRequest{}
	this.Role = role
	this.User = user
	return &this
}

// NewKafkaRoleBindingRequestWithDefaults instantiates a new KafkaRoleBindingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKafkaRoleBindingRequestWithDefaults() *KafkaRoleBindingRequest {
	this := KafkaRoleBindingRequest{}
	return &this
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *KafkaRoleBindingRequest) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRoleBindingRequest) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *KafkaRoleBindingRequest) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *KafkaRoleBindingRequest) SetKind(v string) {
	o.Kind = &v
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *KafkaRoleBindingRequest) GetApiVersion() string {
	if o == nil || IsNil(o.ApiVersion) {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRoleBindingRequest) GetApiVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ApiVersion) {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *KafkaRoleBindingRequest) HasApiVersion() bool {
	if o != nil && !IsNil(o.ApiVersion) {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *KafkaRoleBindingRequest) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KafkaRoleBindingRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRoleBindingRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KafkaRoleBindingRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KafkaRoleBindingRequest) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *KafkaRoleBindingRequest) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRoleBindingRequest) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *KafkaRoleBindingRequest) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *KafkaRoleBindingRequest) SetNamespace(v string) {
	o.Namespace = &v
}

// GetRole returns the Role field value
func (o *KafkaRoleBindingRequest) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *KafkaRoleBindingRequest) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *KafkaRoleBindingRequest) SetRole(v string) {
	o.Role = v
}

// GetUser returns the User field value
func (o *KafkaRoleBindingRequest) GetUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *KafkaRoleBindingRequest) GetUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *KafkaRoleBindingRequest) SetUser(v string) {
	o.User = v
}

// GetCreateResourcePatterns returns the CreateResourcePatterns field value if set, zero value otherwise.
func (o *KafkaRoleBindingRequest) GetCreateResourcePatterns() []ResourcePattern {
	if o == nil || IsNil(o.CreateResourcePatterns) {
		var ret []ResourcePattern
		return ret
	}
	return o.CreateResourcePatterns
}

// GetCreateResourcePatternsOk returns a tuple with the CreateResourcePatterns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRoleBindingRequest) GetCreateResourcePatternsOk() ([]ResourcePattern, bool) {
	if o == nil || IsNil(o.CreateResourcePatterns) {
		return nil, false
	}
	return o.CreateResourcePatterns, true
}

// HasCreateResourcePatterns returns a boolean if a field has been set.
func (o *KafkaRoleBindingRequest) HasCreateResourcePatterns() bool {
	if o != nil && !IsNil(o.CreateResourcePatterns) {
		return true
	}

	return false
}

// SetCreateResourcePatterns gets a reference to the given []ResourcePattern and assigns it to the CreateResourcePatterns field.
func (o *KafkaRoleBindingRequest) SetCreateResourcePatterns(v []ResourcePattern) {
	o.CreateResourcePatterns = v
}

// GetDeleteResourcePatterns returns the DeleteResourcePatterns field value if set, zero value otherwise.
func (o *KafkaRoleBindingRequest) GetDeleteResourcePatterns() []ResourcePattern {
	if o == nil || IsNil(o.DeleteResourcePatterns) {
		var ret []ResourcePattern
		return ret
	}
	return o.DeleteResourcePatterns
}

// GetDeleteResourcePatternsOk returns a tuple with the DeleteResourcePatterns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaRoleBindingRequest) GetDeleteResourcePatternsOk() ([]ResourcePattern, bool) {
	if o == nil || IsNil(o.DeleteResourcePatterns) {
		return nil, false
	}
	return o.DeleteResourcePatterns, true
}

// HasDeleteResourcePatterns returns a boolean if a field has been set.
func (o *KafkaRoleBindingRequest) HasDeleteResourcePatterns() bool {
	if o != nil && !IsNil(o.DeleteResourcePatterns) {
		return true
	}

	return false
}

// SetDeleteResourcePatterns gets a reference to the given []ResourcePattern and assigns it to the DeleteResourcePatterns field.
func (o *KafkaRoleBindingRequest) SetDeleteResourcePatterns(v []ResourcePattern) {
	o.DeleteResourcePatterns = v
}

func (o KafkaRoleBindingRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KafkaRoleBindingRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.ApiVersion) {
		toSerialize["apiVersion"] = o.ApiVersion
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	toSerialize["role"] = o.Role
	toSerialize["user"] = o.User
	if !IsNil(o.CreateResourcePatterns) {
		toSerialize["createResourcePatterns"] = o.CreateResourcePatterns
	}
	if !IsNil(o.DeleteResourcePatterns) {
		toSerialize["deleteResourcePatterns"] = o.DeleteResourcePatterns
	}
	return toSerialize, nil
}

type NullableKafkaRoleBindingRequest struct {
	value *KafkaRoleBindingRequest
	isSet bool
}

func (v NullableKafkaRoleBindingRequest) Get() *KafkaRoleBindingRequest {
	return v.value
}

func (v *NullableKafkaRoleBindingRequest) Set(val *KafkaRoleBindingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKafkaRoleBindingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKafkaRoleBindingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKafkaRoleBindingRequest(val *KafkaRoleBindingRequest) *NullableKafkaRoleBindingRequest {
	return &NullableKafkaRoleBindingRequest{value: val, isSet: true}
}

func (v NullableKafkaRoleBindingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKafkaRoleBindingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


